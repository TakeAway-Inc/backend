// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package api

// Defines values for Currency.
const (
	CurrencyRUB Currency = "RUB"
)

// Category defines model for category.
type Category struct {
	Id        string `json:"id"`
	ShownName string `json:"shownName"`
}

// Currency defines model for currency.
type Currency string

// Связь с `category` по `categoryId`
type Dish struct {
	Calories        *int   `json:"calories,omitempty"`
	Carbohydrates   *int   `json:"carbohydrates,omitempty"`
	CategoryId      string `json:"categoryId"`
	Description     string `json:"description"`
	Fats            *int   `json:"fats,omitempty"`
	Id              string `json:"id"`
	ImageUrl        string `json:"imageUrl"`
	PreviewImageUrl string `json:"previewImageUrl"`
	Price           struct {
		Amount   *int      `json:"amount,omitempty"`
		Currency *Currency `json:"currency,omitempty"`
	} `json:"price"`
	Proteins  *int   `json:"proteins,omitempty"`
	ShownName string `json:"shownName"`

	// Текст, который будет отображаться в случае отсутствия блюда в меню в данный момент
	UnavailableLabel *UnavailableLabel `json:"unavailableLabel,omitempty"`
	Weight           *int              `json:"weight,omitempty"`
}

// Payment option
type PaymentOption struct {
	// Описание способа оплаты
	Description string `json:"description"`

	// Ссылка на изображение способа оплаты
	ImageUrl string `json:"imageUrl"`

	// Ссылка на переход на сайт платежной системы
	PaymentForwardUrl *string `json:"paymentForwardUrl,omitempty"`

	// Отображаемое название способа оплаты
	ShownName string `json:"shownName"`
}

// RestaurantStyle defines model for restaurantStyle.
type RestaurantStyle struct {
	BackgroundColor     string `json:"backgroundColor"`
	IconUrl             string `json:"iconUrl"`
	Id                  string `json:"id"`
	RestaurantShownName string `json:"restaurantShownName"`
}

// Текст, который будет отображаться в случае отсутствия блюда в меню в данный момент
type UnavailableLabel struct {
	ShownText string `json:"shownText"`
}

// GetPaymentOptionsResponse defines model for getPaymentOptionsResponse.
type GetPaymentOptionsResponse []PaymentOption

// GetRestaurantResponse defines model for getRestaurantResponse.
type GetRestaurantResponse struct {
	Categories []Category `json:"categories"`

	// Отсортированный список блюд
	Dishes []Dish          `json:"dishes"`
	Style  RestaurantStyle `json:"style"`
}
